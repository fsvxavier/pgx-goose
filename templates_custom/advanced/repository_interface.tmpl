// Package {{.Package}} contém as interfaces do repositório para {{.StructName}}
// Code generated by pgx-goose with PostgreSQL templates. DO NOT EDIT.
package {{.Package}}

import (
	"context"

	"github.com/fsvxavier/isis-golang-lib/db/postgresql/common"
)

// {{.InterfaceName}} define a interface para operações de repositório da entidade {{.StructName}}
type {{.InterfaceName}} interface {
	// Operações CRUD básicas
	Create(ctx context.Context, entity *{{.StructName}}) error
	CreateBatch(ctx context.Context, entities []*{{.StructName}}) error
	GetByID(ctx context.Context, id {{.PrimaryKeyType}}) (*{{.StructName}}, error)
	Update(ctx context.Context, entity *{{.StructName}}) error
	UpdatePartial(ctx context.Context, id {{.PrimaryKeyType}}, updates map[string]interface{}) error
	Delete(ctx context.Context, id {{.PrimaryKeyType}}) error
	
	// Operações de consulta
	GetAll(ctx context.Context, offset, limit int) ([]*{{.StructName}}, error)
	Count(ctx context.Context) (int64, error)
	Exists(ctx context.Context, id {{.PrimaryKeyType}}) (bool, error)
	
	// Operações com filtros
	FindBy(ctx context.Context, filters map[string]interface{}, offset, limit int) ([]*{{.StructName}}, error)
	CountBy(ctx context.Context, filters map[string]interface{}) (int64, error)

	// Operações com transação
	CreateTx(ctx context.Context, tx common.ITransaction, entity *{{.StructName}}) error
	UpdateTx(ctx context.Context, tx common.ITransaction, entity *{{.StructName}}) error
	DeleteTx(ctx context.Context, tx common.ITransaction, id {{.PrimaryKeyType}}) error
	
	// Operações em lote
	CreateBatchTx(ctx context.Context, tx common.ITransaction, entities []*{{.StructName}}) error
	UpdateBatchTx(ctx context.Context, tx common.ITransaction, entities []*{{.StructName}}) error
	DeleteBatchTx(ctx context.Context, tx common.ITransaction, ids []{{.PrimaryKeyType}}) error
}
